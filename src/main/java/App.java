import com.google.common.collect.ConcurrentHashMultiset;
import com.google.common.collect.Multiset;
import org.cloudgarden.sotagparser.model.Question;
import org.cloudgarden.sotagparser.model.Wrapper;
import org.cloudgarden.sotagparser.service.StackoverflowService;

import java.util.Comparator;

import static java.lang.String.format;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {
    public static void main(String[] args) {

        int pageSize = 5;
        int maxPageNum = 10;
        int topNumber = 5;

        String query = "java generics";

        final StackoverflowService stackoverflowService = new StackoverflowService();

        final Multiset<String> tags = ConcurrentHashMultiset.create();

        Wrapper<Question> searchResult;
        int page = 1;

        do {
            searchResult = stackoverflowService.search(query, page++, pageSize);
            searchResult.getItems().stream().flatMap(q -> q.getTags().stream()).forEach(tags::add);
        } while (searchResult.isHas_more() && page <= maxPageNum);

        tags.entrySet().stream()
                .sorted(Comparator.<Multiset.Entry<String>>comparingInt(Multiset.Entry::getCount).reversed())
                .limit(topNumber)
                .map(e -> format("%s x %d", e.getElement(), e.getCount()))
                .forEach(System.out::println);
    }
}
