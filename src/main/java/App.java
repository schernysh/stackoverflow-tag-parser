import one.util.streamex.IntStreamEx;
import org.cloudgarden.sotagparser.model.Wrapper;
import org.cloudgarden.sotagparser.service.StackoverflowService;

import java.util.Map;

import static java.lang.String.format;
import static java.util.Comparator.reverseOrder;
import static java.util.function.Function.identity;
import static java.util.stream.Collectors.counting;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {
    public static void main(String[] args) {

        int pageSize = 5;
        int maxPageNum = 10;
        int topNumber = 5;

        String query = "java generics";

        final StackoverflowService stackoverflowService = new StackoverflowService();

        IntStreamEx.rangeClosed(1, maxPageNum)
                .mapToObj(p -> stackoverflowService.search(query, p, pageSize))
                .takeWhile(Wrapper::isHas_more)
                .flatMap(wrapper -> wrapper.getItems().stream())
                .flatMap(question -> question.getTags().stream())
                .groupingBy(identity(), counting())
                .entrySet().stream()
                .sorted(Map.Entry.comparingByValue(reverseOrder()))
                .limit(topNumber)
                .map(e -> format("%s x %d", e.getKey(), e.getValue()))
                .forEach(System.out::println);
    }
}
